`define plus  2'b00
`define minus 2'b01
`define aand  2'b10
`define nnot  2'b11

module ALU(Ain,Bin,ALUop,out,Z);
	input [15:0] Ain, Bin;
	input [1:0] ALUop;
	output [15:0] out;
	output Z;
	reg Z;
	reg [15:0] out;
	// fill out the rest
	
	always_comb begin
		case(ALUop)
			`plus : out = Ain + Bin;
			`minus : out = Ain - Bin;
			`aand : out = Ain & Bin;
			`nnot : out = ~Bin;
		
			default : out = {16{1'bx}};
		endcase
		
		if (out == 1'b0)
			Z = 1'b1;
		else
			Z = 1'b0;
	end
	
endmodule: ALU
